<?php 
/**
 * HOOK page_build
 * подключаем скрипты после рендера страницы
 * @param  [type] &$page [description]
 * @return [type]        [description]
 */
function surweb_simple_cart_page_build(&$page)
{
  // dpm($page);
  // подключаем стили и скрипты
  drupal_add_css(drupal_get_path('module', 'surweb_simple_cart') . '/css/main.css');
  drupal_add_js(drupal_get_path('module', 'surweb_simple_cart') . '/js/main.min.js');
  drupal_add_js(drupal_get_path('module', 'surweb_simple_cart') . '/js/jquery.cookie.min.js');

}

/**
 * HOOK node_view
 * хук предназначен для работы с нодой непосредственно перед выводом
 * добавляем кнопку после body в тип материала
 * @param  [type] $node      [description]
 * @param  [type] $view_mode [description]
 * @param  [type] $langcode  [description]
 * @return [type]            [description]
 */
function surweb_simple_cart_node_view($node, $view_mode, $langcode) {  
  $cost_field = variable_get('cart_node_cost', 'field_price');
  if (($node->type == variable_get('cart_node_type', 'products')) && ($view_mode == 'full')) {
    $node->content['body'][0]['#markup'] .= '<button class="btn-add-to-cart" data-name="'.$node->title.'" data-id="---" data-cost="'.$node->{$cost_field}["und"][0]["value"].'">Заказать</button>';
    
  }
}


/**
 * HOOK block_view
 * @param  string $delta [description]
 * @return [type]        [description]
 */
function surweb_simple_cart_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  switch ($delta) {
  
    case 'surweb_simple_cart_block':
      $block['subject'] = "Корзина";
      $block['content'] = '<div class="cart-block">
  <div class="cart-icon"><img src="/'.drupal_get_path("module", "surweb_simple_cart") . "/img/cart.png".'" alt="Корзина">
  <div class="cart-badge">1</div>
  </div>
  <div class="cart-info">
    <div class="cart-cost"></div>
  </div>

</div>';
      break;
  }
  return $block;
}

/**
 * HOOK block_info
 * @return [type] [description]
 */
function surweb_simple_cart_block_info() {
  $blocks['surweb_simple_cart_block'] = array(
    // info: The name of the block.
    'info' => "Блок корзины простой корзины",
    // Block caching options (per role, per user, etc.)
    // DRUPAL_CACHE_PER_ROLE is the default.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );


  return $blocks;
}


/**
 * HOOK menu
 * страницы модуля
 * @return [type] [description]
 */
function surweb_simple_cart_menu()
{
  $items = array();
  $items['simple-cart/send'] = array(
    'title' => 'simple cart send',
    'page callback' => 'send_invoice',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['simple-cart/message'] = array(
    'title' => 'Оформление заказа',
    'page callback' => 'show_message',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['simple-cart/mailcheck'] = array(
    'title' => 'AJAX mail checker',
    'page callback' => 'mail_checker',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/user-interface/surweb-simple-cart-setting'] = array(
      'title' => 'Страница настнойки Simple Cart',
      'description' => 'Прстейший модуль корзины',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('surweb_cart_settings'),
      'file' => 'admin_form.inc',
      'access callback' => TRUE, 
      'type' => MENU_NORMAL_ITEM,
    );

  return $items;
}

function send_invoice(){
  // print_r($_SERVER);
  // print_r($_POST['user']);

  $data = array();

    if(isset($_GET['files'])) {
        $error = false;
        $files = array();
        // $uri = 'public://';
        $path= variable_get('file_public_path', conf_path() . '/files');

        $uploaddir = $path."/recvizits/";

        if( ! is_dir( $uploaddir ) ) mkdir( $uploaddir, 0777 );

        foreach($_FILES as $file)
        {
            if(move_uploaded_file($file['tmp_name'], $uploaddir .basename($file['name'])))
            {
                $files = $uploaddir . $file['name'];
                // $files[] = "recvizits/".$file['name'];
            }
            else
            {
                $error = true;
            }
        }

        $data = ($error) ? array('error' => 'There was an error uploading your files') : array('files' => $files);


        echo json_encode( $data );
    }


    // если не запрос на загрузку файловотправляем файлы
    // то отправляем почту
    else
    {
        $data = array('success' => 'Form was submitted', 'formData' => $_POST);

        echo json_encode($data);

  global $base_url;
  $_origin = $_SERVER['HTTP_ORIGIN'];


  // проверка на источник формы
  if ($_origin != $base_url) {
    exit ("fuuuuu");
  }

  $_user = $_POST['user'];

  if (empty($_user['email'])) {
    exit ("empty mail field");
  }


  $site_email = variable_get('site_mail', '');
  $site_name = variable_get('site_name', '');
  $date = date("j/m/Y (H:i)");

  $title = "ЗАКАЗ на сайте $site_name от $date";


  $body = strtoupperrus(strtoupper($title)) . "\r\n\r\n";
  $_filename = $_POST['filename'];
  $_items = $_POST['items'];
  $_count = $_POST['count'];
  $_summ = number_format ( $_POST['summ'], 2, "," , " " );
  $_files = FALSE;
  if (isset($_POST['files'])) {
    if (file_exists($_POST['files'])) {
      if (checkAccepted($_POST['files'])) {
        $_files = $_POST['files'];
      } else {
        // если фаил существует но запрещенного типа - удаляем его
        unlink($_POST['files']); 
      }

    }
  }

  $body .= "ваш заказ: \r\n--------------------------------------------------------------------------------\r\n\r\n";
  foreach ($_items as $item) {
    $body .= "- ".$item['name']. "\t" .$item['qty']. "\t" .$item['cost'] . " руб." . "\r\n";
    $body .= "--------------------------------------------------------------------------------\r\n";
  }

  $body .= "\r\nИТОГО: $_summ руб.\r\n";

  $body .= "\r\nКонтакты сайта:\r\n\tпочта: " . $site_email . "\r\n" . "\tадрес: $base_url";

  // $body .= $_items;


  $HOST_MAIL = @substr($_user['email'],strpos($_user['email'],"@")+1);
          if(!empty($HOST_MAIL)) {
            if(checkdnsrr($HOST_MAIL)){

              drupal_mail('system', 'mail', $_user['email'], language_default(), array(
                'context' => array(
                  'subject' => $title,
                  'message' => $body,
                )
              ));

              // для письма админу
              $body .= "\r\n--------------------------------------------------------------------------------\r\n";
              $body .= "\r\nДанные пользователя: ";
              
              if (!empty($_user['username'])) {
                $body .= "\r\n\tИмя клиента: ". $_user['username'];
              }
              if (!empty($_user['email'])) {
                $body .= "\r\n\tпочта клиента: ". $_user['email'];
              }
              if (!empty($_user['tel'])) {
                $body .= "\r\n\tтелефон клиента: ". $_user['tel'];
              }

              // копия письма админу сайта
              if ($_files) {
                  # code...
                drupal_mail('surweb_simple_cart', 'send_attachment', $site_email, language_default(), array(
                    'subject' => $title,
                    'body'    => $body,
                    'attachments' => array(array('filepath' => $_files)),
                ));

                  // удаляем фаил для реализации временного хранилища
                  unlink($_files);

              } else {
                drupal_mail('surweb_simple_cart', 'send_attachment', $site_email, language_default(), array(
                    'subject' => $title,
                      'body'    => $body,
                ));
              }


            }
          }

    }
}

/**
 * Implements hook_mail().
 */
function surweb_simple_cart_mail($key, &$message, $params) {
  if ($key == 'send_attachment') {
    $message['subject'] = "Клиент оформил ".$params['subject'];
    $message['body'][] = $params['body'];
  }
}


function strtoupperrus($string){
  return strtr($string,"ёйцукенгшщзхъфывапролджэячсмитьбю","ЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ");
}



function show_message() {
  return array(
    '#markup' =>
    t('<h2>Ваш заказ успешно отправлен</h2><p><a href="/">Вернуться на главную страницу</a></p><p><a href="#" onclick="(function(){window.history.back();return false;})()">Вернуться к выбору</a></p>',
      array(
        '@simple_link' => url('examples/page_example/simple', array('absolute' => TRUE)),
        '@arguments_link' => url('examples/page_example/arguments/23/56', array('absolute' => TRUE)),
      )
    ),
  );
}

function mail_checker() {
  if ($_SERVER['REQUEST_METHOD'] == 'POST' && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest') {
    $HOST_MAIL = @substr($_POST['email'],strpos($_POST['email'],"@")+1);
          if(!empty($HOST_MAIL)) {
            if(checkdnsrr($HOST_MAIL)){
              return drupal_json_output(array("mail_exists" => true));
            }
          }

          return drupal_json_output(array("mail_exists" => false));

  } else {
    return drupal_json_output(array("access"=>'denied'));
  }
}


// для быстрой настройки доступа
function checkAccepted ($path) {
    $exts = explode(",", "jpeg,jpg,png,gif,bmp,doc,docx,txt,zip,rar");
    $_pi = pathinfo($path);

    if (in_array($_pi['extension'], $exts)) {
        return true;    
    } 
    return false;
}